{"name": "Register Tutor Test Case: Hiring-6", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed", "trace": "tcid = 'Hiring-6', gender = 'Anh', name = 'Nguyen Van A', phone = 'abc12345', address = 'Hà Nội', note = ''\nexpected_message = 'Hệ thống không báo lỗi', result = None, screenshot = None, video = None\n\n    @pytest.mark.parametrize(\n        \"tcid, gender, name, phone, address, note, expected_message, result, screenshot, video\",\n        read_test_data(DATA_FILE, \"RegisterTutorTestData\"),\n        ids=lambda val: str(val[0]) if isinstance(val, (list, tuple)) else str(val),\n    )\n    @allure.feature(\"Register Tutor\")\n    @allure.title(\"Register Tutor Test Case: {tcid}\")\n    def test_register_tutor(\n        tcid,\n        gender,\n        name,\n        phone,\n        address,\n        note,\n        expected_message,\n        result,\n        screenshot,\n        video,\n    ):\n        gender = \"\" if gender is None else str(gender)\n        name = \"\" if name is None else str(name)\n        phone = \"\" if phone is None else str(phone)\n        address = \"\" if address is None else str(address)\n        note = \"\" if note is None else str(note)\n        expected_message = \"\" if expected_message is None else str(expected_message)\n    \n        with sync_playwright() as p:\n            browser = p.chromium.launch(\n                headless=False, slow_mo=500, args=[\"--start-maximized\"]\n            )\n            context = browser.new_context(\n                no_viewport=True,\n                record_video_dir=VIDEO_DIR,\n                record_video_size={\"width\": 1280, \"height\": 720},\n            )\n            page = context.new_page()\n    \n            reg_page = RegisterTutorPage(page)\n            marketing_url = get_marketing_url()\n            reg_page.goto(marketing_url)\n    \n            with allure.step(\"Điền form và gửi\"):\n>               reg_page.register(gender, name, phone, address, note)\n\ntests\\test_register_tutor.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\register_tutor_page.py:79: in register\n    self._safe_fill(self.phone_input, phone)\npages\\register_tutor_page.py:44: in _safe_fill\n    locator.fill(str(value))\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15889: in fill\n    self._sync(\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_locator.py:212: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:590: in fill\n    await self._fill(**locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:602: in _fill\n    await self._channel.send(\"fill\", self._timeout, locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000001D494A31A30>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001D494A50540>, is_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TargetClosedError"}, "steps": [{"name": "Điền form và gửi", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.fill: Target page, context or browser has been closed\n", "trace": "  File \"c:\\Users\\hoang\\Desktop\\doan4\\tests\\test_register_tutor.py\", line 61, in test_register_tutor\n    reg_page.register(gender, name, phone, address, note)\n    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\hoang\\Desktop\\doan4\\pages\\register_tutor_page.py\", line 79, in register\n    self._safe_fill(self.phone_input, phone)\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\hoang\\Desktop\\doan4\\pages\\register_tutor_page.py\", line 44, in _safe_fill\n    locator.fill(str(value))\n    ~~~~~~~~~~~~^^^^^^^^^^^^\n  File \"C:\\Users\\hoang\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15889, in fill\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.fill(\n        ^^^^^^^^^^^^^^^^^^^^\n            value=value, timeout=timeout, noWaitAfter=no_wait_after, force=force\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Users\\hoang\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\hoang\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 212, in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\hoang\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 590, in fill\n    await self._fill(**locals_to_params(locals()))\n  File \"C:\\Users\\hoang\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 602, in _fill\n    await self._channel.send(\"fill\", self._timeout, locals_to_params(locals()))\n  File \"C:\\Users\\hoang\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 69, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n    )\n    ^\n  File \"C:\\Users\\hoang\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 558, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1759480666461, "stop": 1759480668670}], "parameters": [{"name": "tcid", "value": "'Hiring-6'"}, {"name": "gender", "value": "'Anh'"}, {"name": "name", "value": "'Nguyen Van A'"}, {"name": "phone", "value": "'abc12345'"}, {"name": "address", "value": "'Hà Nội'"}, {"name": "note", "value": "None"}, {"name": "expected_message", "value": "'Hệ thống không báo lỗi'"}, {"name": "result", "value": "None"}, {"name": "screenshot", "value": "None"}, {"name": "video", "value": "None"}], "start": 1759480663987, "stop": 1759480668956, "uuid": "07c9284d-94d9-4f1b-a4c8-a07ea95e2671", "historyId": "9be25014afaf8d6536676bc7cf07385f", "testCaseId": "b422b89a2652c3bc20ad4eba6e0b3edf", "fullName": "tests.test_register_tutor#test_register_tutor", "labels": [{"name": "feature", "value": "Register Tutor"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_register_tutor"}, {"name": "host", "value": "LTADUYEN"}, {"name": "thread", "value": "12208-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_register_tutor"}], "titlePath": ["tests", "test_register_tutor.py"]}