{"name": "Register Tutor Test Case: Hiring-4", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Unsupported token \"@value\" while parsing css selector \"input[type='submit'][value='Đăng Ký Ngay'], //input[@value='Đăng Ký Ngay']\". Did you mean to CSS.escape it?\nCall log:\n  - Expect \"to_be_visible\" with timeout 10000ms\n  - waiting for internal:role=button[name=\"Đăng Ký Ngay\"i] >> internal:or=\"input[type='submit'][value='\\u0110\\u0103ng K\\u00fd Ngay'], //input[@value='\\u0110\\u0103ng K\\u00fd Ngay']\"", "trace": "tcid = 'Hiring-4', gender = 'Anh', name = 'Nguyen Van A', phone = '0912345678', address = '', note = ''\nexpected_message = 'Hệ thống không báo lỗi và tiếp tục đăng ký', result = None, screenshot = None, video = None\n\n    @pytest.mark.parametrize(\n        \"tcid, gender, name, phone, address, note, expected_message, result, screenshot, video\",\n        read_test_data(DATA_FILE, \"RegisterTutorTestData\"),\n        ids=lambda val: str(val[0]) if isinstance(val, (list, tuple)) else str(val),\n    )\n    @allure.feature(\"Register Tutor\")\n    @allure.title(\"Register Tutor Test Case: {tcid}\")\n    def test_register_tutor(\n        tcid,\n        gender,\n        name,\n        phone,\n        address,\n        note,\n        expected_message,\n        result,\n        screenshot,\n        video,\n    ):\n        # Chuẩn hoá None -> \"\"\n        gender = \"\" if gender is None else str(gender)\n        name = \"\" if name is None else str(name)\n        phone = \"\" if phone is None else str(phone)\n        address = \"\" if address is None else str(address)\n        note = \"\" if note is None else str(note)\n        expected_message = \"\" if expected_message is None else str(expected_message)\n    \n        with sync_playwright() as p:\n            browser = p.chromium.launch(\n                headless=False, slow_mo=500, args=[\"--start-maximized\"]\n            )\n            context = browser.new_context(\n                no_viewport=True,\n                record_video_dir=VIDEO_DIR,\n                record_video_size={\"width\": 1280, \"height\": 720},\n            )\n            page = context.new_page()\n    \n            reg_page = RegisterTutorPage(page)\n            marketing_url = get_marketing_url()\n>           reg_page.goto(marketing_url)\n\ntests\\test_register_tutor.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\register_tutor_page.py:51: in goto\n    expect(self.submit_btn).to_be_visible(timeout=10000)\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_locator.py:726: in _expect\n    return await self._frame._expect(self._selector, expression, options, title)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:189: in _expect\n    result = await self._channel.send_return_as_dict(\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:83: in send_return_as_dict\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000001659B985480>\ncb = <function Channel.send_return_as_dict.<locals>.<lambda> at 0x000001659BD73BA0>, is_internal = False, title = 'Expect \"to_be_visible\"'\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Unsupported token \"@value\" while parsing css selector \"input[type='submit'][value='Đăng Ký Ngay'], //input[@value='Đăng Ký Ngay']\". Did you mean to CSS.escape it?\nE           Call log:\nE             - Expect \"to_be_visible\" with timeout 10000ms\nE             - waiting for internal:role=button[name=\"Đăng Ký Ngay\"i] >> internal:or=\"input[type='submit'][value='\\u0110\\u0103ng K\\u00fd Ngay'], //input[@value='\\u0110\\u0103ng K\\u00fd Ngay']\"\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: Error"}, "parameters": [{"name": "tcid", "value": "'Hiring-4'"}, {"name": "gender", "value": "'Anh'"}, {"name": "name", "value": "'Nguyen Van A'"}, {"name": "phone", "value": "'0912345678'"}, {"name": "address", "value": "None"}, {"name": "note", "value": "None"}, {"name": "expected_message", "value": "'Hệ thống không báo lỗi và tiếp tục đăng ký'"}, {"name": "result", "value": "None"}, {"name": "screenshot", "value": "None"}, {"name": "video", "value": "None"}], "start": 1759480205766, "stop": 1759480208199, "uuid": "759bb8dc-f5c6-43df-a1c1-97ff7640e4f4", "historyId": "5eb4a60ae65dd1c875743b23eab36d9e", "testCaseId": "b422b89a2652c3bc20ad4eba6e0b3edf", "fullName": "tests.test_register_tutor#test_register_tutor", "labels": [{"name": "feature", "value": "Register Tutor"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_register_tutor"}, {"name": "host", "value": "LTADUYEN"}, {"name": "thread", "value": "6532-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_register_tutor"}], "titlePath": ["tests", "test_register_tutor.py"]}